Language:- C++

Problem:-

21. Merge Two Sorted Lists
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

Program:-

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        struct ListNode* root=NULL;
        struct ListNode* n;
        struct ListNode* ptr;
        if(l1==NULL&&l2!=NULL)
            return l2;
        if(l2==NULL&&l1!=NULL)
            return l1;
        int i=0;
        while(l1!=NULL || l2!=NULL)
        {   n=new ListNode(-1);
         n->next=NULL;
         if(i==0){
             root=n;
             ptr=root;
             i++;
         }
            if(l1==NULL)
            {   if(root==NULL)
                root=l1;
             else{
                n->val=l2->val;
                l2=l2->next;
             }
            }
            else if(l2==NULL)
            {
                if(root==NULL)
                root=l2;
             else{
                n->val=l1->val;
                l1=l1->next;
             }
            }
            else
            {
               if(l1->val==l2->val){
                   n->val=l1->val;
                   
                   l2=l2->next;
                   
               } 
                else if(l1->val<l2->val)
                {
                    n->val=l1->val;
                    l1=l1->next;
                }
                else
                {
                   n->val=l2->val;
                    l2=l2->next;  
                }
            }
        
        ptr->next=n;
         ptr=ptr->next;
        }
        return root;
        }
};
